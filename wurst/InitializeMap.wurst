package InitializeMap
import UnitIds
import TerrainUtils
import Assets
import OrderIds
import StandardTextTags
//allows referencing UnitIds to get a premade unit id ex: UnitIds.paladin, we are able to call the class UnitIds 
//and use its constants because they are static which means they don't need a class isntance to be accessed

/*
* Create starting units for each player
* Store players in a datastructure
* Print player names
* 
*
*/

//VARIABLES
int totalDeaths = 3
let hostId = GetLocalPlayer()
let state = ifWinner()
let condition = getGameState(state)
let startingUnitId = UnitIds.alchemist
constant mapCenter = vec2(0,0)

//custom tuple data structure about player attributes
tuple generalUserInfo(player playerId, string condition, boolean winCondition, int startUnitId, real xPos, real yPos, real angle)  //custom data structure, type strict, and similar to accessing properties of an object
var player1 = generalUserInfo(hostId,condition,state, startingUnitId, mapCenter.x, mapCenter.y, 0)
var player2 = player1 //initialized as player1 data, will be changed later

//some practice functions
function redefineMyTuple()  
    player2.playerId = GetLocalPlayer()
    player2.condition = "winner"
    player2.winCondition = true
    player2.startUnitId = UnitIds.akama
    player2.xPos = mapCenter.x
    player2.yPos = mapCenter.y
    player2.angle = 0

function ifWinner() returns boolean
    return totalDeaths < 5 ? true : false  

function getGameState(boolean state) returns string 
    return state ? "winner" : "loser"

//make a function to get the number of players playing and assign to an integer
//then create a unit for each player
var myText = standardTextTag(vec2(-250, -250), "GODLIKE")..setColor(255, 0, 0, 0)..setPermanent(true)..setVelocity(vec2(0,0))


init
    //now making use of the tuple data about the player to create the start units
    let mainHero = CreateUnit(player1.playerId, player1.startUnitId, player1.xPos, player1.yPos, player1.angle)
                                                                                                
    mainHero..issuePointOrderById(OrderIds.move, vec2(500, 500))
            ..setMoveSpeedPercChange(5)
            
    mapCenter.addTerrainHeight(100)
    createCriticalStrikeTextTag(mainHero, 5000)